openapi: 3.1.0
info:
  title: ClipPilot API
  version: 1.0.0
  description: |
    ClipPilot MVP - AI 숏폼 크리에이터 자동화 SaaS API

    ## 인증
    - Bearer Token (JWT) 사용
    - Supabase Auth로 발급된 토큰 필요
    - Authorization 헤더: `Bearer <token>`

    ## Rate Limiting
    - NFR-017: 60 requests/minute per user
    - 초과 시 429 Too Many Requests 반환

    ## 에러 형식
    모든 에러는 다음 형식으로 반환:
    ```json
    {
      "error": {
        "code": "ERROR_CODE",
        "message": "사용자 친화적 메시지",
        "details": {}
      }
    }
    ```

servers:
  - url: https://api.clippilot.com/v1
    description: Production
  - url: http://localhost:8000/v1
    description: Local Development

tags:
  - name: Auth
    description: 인증 및 회원가입
  - name: Jobs
    description: 콘텐츠 생성 작업 관리
  - name: Templates
    description: 브랜드 템플릿 관리
  - name: Channels
    description: YouTube 채널 관리
  - name: Billing
    description: 결제 및 플랜 관리
  - name: Metrics
    description: 사용 통계 및 대시보드

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required: [error]
      properties:
        error:
          type: object
          required: [code, message]
          properties:
            code:
              type: string
              example: "INVALID_INPUT"
            message:
              type: string
              example: "이메일 형식이 올바르지 않습니다"
            details:
              type: object

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        plan:
          type: string
          enum: [free, pro, agency]
        created_at:
          type: string
          format: date-time
        last_login_at:
          type: string
          format: date-time

    Channel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        yt_channel_id:
          type: string
        channel_name:
          type: string
        channel_thumbnail:
          type: string
          format: uri
        is_active:
          type: boolean
        token_expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    Template:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        brand_config:
          type: object
          properties:
            subtitle:
              type: object
              properties:
                font_family:
                  type: string
                font_size:
                  type: integer
                color:
                  type: string
                background_color:
                  type: string
                position:
                  type: string
                  enum: [top, center, bottom]
            intro:
              type: object
              properties:
                duration_sec:
                  type: integer
                video_url:
                  type: string
                  format: uri
            outro:
              type: object
              properties:
                duration_sec:
                  type: integer
                video_url:
                  type: string
                  format: uri
            watermark:
              type: object
              properties:
                image_url:
                  type: string
                  format: uri
                position:
                  type: string
                  enum: [top-left, top-right, bottom-left, bottom-right]
                opacity:
                  type: number
                  minimum: 0
                  maximum: 1
            colors:
              type: object
              properties:
                primary:
                  type: string
                  pattern: '^#[0-9A-Fa-f]{6}$'
                  example: "#FF5722"
                  description: "브랜드 주 색상 (HEX 형식)"
                secondary:
                  type: string
                  pattern: '^#[0-9A-Fa-f]{6}$'
                  example: "#2196F3"
                  description: "브랜드 보조 색상 (HEX 형식)"
        is_system_default:
          type: boolean
        created_at:
          type: string
          format: date-time

    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum: [queued, generating, rendering, uploading, done, failed]
        prompt:
          type: string
        video_length_sec:
          type: integer
          enum: [15, 30, 60]
        tone:
          type: string
          enum: [informative, fun, emotional]
        script:
          type: string
          nullable: true
        srt:
          type: string
          nullable: true
        metadata:
          type: object
          nullable: true
          properties:
            title:
              type: string
            description:
              type: string
            tags:
              type: array
              items:
                type: string
            chapters:
              type: array
              items:
                type: object
                properties:
                  time:
                    type: string
                  title:
                    type: string
        output_video_url:
          type: string
          format: uri
          nullable: true
        output_thumbnail_url:
          type: string
          format: uri
          nullable: true
        youtube_video_id:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        progress:
          type: integer
          minimum: 0
          maximum: 100
        estimated_completion_time:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Subscription:
      type: object
      properties:
        plan:
          type: string
          enum: [free, pro, agency]
        status:
          type: string
          enum: [active, cancelled, past_due, unpaid]
        current_period_end:
          type: string
          format: date-time
        cancel_at_period_end:
          type: boolean
        monthly_limit:
          type: integer
        usage_this_month:
          type: integer

    UsageStats:
      type: object
      properties:
        period:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        total_jobs:
          type: integer
        success_rate:
          type: number
          minimum: 0
          maximum: 100
        failed_jobs:
          type: integer
        avg_render_time_sec:
          type: number
        usage_percent:
          type: number
        remaining_quota:
          type: integer

paths:
  # Auth Endpoints
  /auth/signup:
    post:
      tags: [Auth]
      summary: 회원가입 (FR-021)
      description: |
        이메일/비밀번호로 새 계정 생성.
        - 이메일 중복 검증
        - 비밀번호: 최소 8자, 영문/숫자/특수문자 조합 (FR-022)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '400':
          description: 잘못된 입력 (이메일 중복, 비밀번호 규칙 위반)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags: [Auth]
      summary: 로그인 (FR-023)
      description: |
        이메일/비밀번호로 로그인.
        - 3회 실패 시 15분 계정 잠금
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '401':
          description: 인증 실패
        '429':
          description: 너무 많은 로그인 시도 (15분 후 재시도)

  /auth/reset-password:
    post:
      tags: [Auth]
      summary: 비밀번호 재설정 이메일 발송 (FR-024)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: 재설정 이메일 발송 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "재설정 링크가 이메일로 발송되었습니다"

  # Jobs Endpoints
  /jobs:
    post:
      tags: [Jobs]
      summary: 새 작업 생성 (FR-001, FR-002)
      description: |
        프롬프트로 콘텐츠 생성 작업 생성.
        - 사용량 한도 확인 (FR-008)
        - 프롬프트 최소 5단어 검증
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [prompt, video_length_sec, tone]
              properties:
                prompt:
                  type: string
                  minLength: 5
                  example: "최신 스마트폰 리뷰 영상 만들기"
                video_length_sec:
                  type: integer
                  enum: [15, 30, 60]
                tone:
                  type: string
                  enum: [informative, fun, emotional]
                template_id:
                  type: string
                  format: uuid
                  nullable: true
                upload:
                  type: object
                  nullable: true
                  properties:
                    channel_id:
                      type: string
                      format: uuid
                    privacy:
                      type: string
                      enum: [draft, public, private]
                      default: draft
                    schedule_at:
                      type: string
                      format: date-time
                      nullable: true
      responses:
        '201':
          description: 작업 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: 잘못된 입력
        '403':
          description: 월간 한도 초과 (FR-008)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "QUOTA_EXCEEDED"
                      message:
                        type: string
                        example: "이번 달 생성 한도를 모두 사용했습니다. Pro로 업그레이드하시겠습니까?"
                      details:
                        type: object
                        properties:
                          usage:
                            type: integer
                            example: 20
                          limit:
                            type: integer
                            example: 20
                          upgrade_url:
                            type: string
        '429':
          description: Rate limit 초과 (NFR-017)

    get:
      tags: [Jobs]
      summary: 작업 목록 조회 (FR-010)
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [queued, generating, rendering, uploading, done, failed]
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 작업 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  next_cursor:
                    type: string
                    nullable: true

  /jobs/{job_id}:
    get:
      tags: [Jobs]
      summary: 작업 상세 조회 (FR-010, FR-020)
      description: |
        작업 상태, 진행률, 예상 완료 시간 조회
      security:
        - BearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 작업 상세 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: 작업을 찾을 수 없음

    patch:
      tags: [Jobs]
      summary: 작업 수정 (FR-019)
      description: |
        생성된 스크립트, 자막, 썸네일 카피 수정
      security:
        - BearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                script:
                  type: string
                srt:
                  type: string
                metadata:
                  type: object
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'

  /jobs/{job_id}/retry:
    post:
      tags: [Jobs]
      summary: 작업 재시도 (FR-011, FR-029)
      description: |
        실패한 작업 재시도
      security:
        - BearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 재시도 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: 재시도 불가능한 상태

  /jobs/{job_id}/download:
    get:
      tags: [Jobs]
      summary: 영상 다운로드 (FR-029)
      description: |
        렌더링된 영상 백업 다운로드
      security:
        - BearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '302':
          description: Supabase Storage로 리디렉트
        '404':
          description: 영상을 찾을 수 없음

  # Templates Endpoints
  /templates:
    get:
      tags: [Templates]
      summary: 템플릿 목록 조회 (FR-031)
      description: |
        사용자 템플릿 + 시스템 기본 템플릿 3개
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 템플릿 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  system_templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/Template'
                  user_templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/Template'

    post:
      tags: [Templates]
      summary: 새 템플릿 생성 (FR-007, FR-032)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, brand_config]
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                brand_config:
                  type: object
      responses:
        '201':
          description: 템플릿 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'

  /templates/{template_id}:
    put:
      tags: [Templates]
      summary: 템플릿 수정 (FR-007)
      security:
        - BearerAuth: []
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand_config:
                  type: object
      responses:
        '200':
          description: 수정 성공
        '403':
          description: 시스템 기본 템플릿은 수정 불가

    delete:
      tags: [Templates]
      summary: 템플릿 삭제 (FR-007)
      security:
        - BearerAuth: []
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 삭제 성공
        '403':
          description: 시스템 기본 템플릿은 삭제 불가

  # Channels Endpoints
  /channels/oauth/youtube:
    get:
      tags: [Channels]
      summary: YouTube OAuth 시작 (FR-012)
      description: |
        Google OAuth 인증 페이지로 리디렉트
      security:
        - BearerAuth: []
      responses:
        '302':
          description: Google OAuth로 리디렉트

  /channels/oauth/youtube/callback:
    get:
      tags: [Channels]
      summary: YouTube OAuth 콜백 (FR-012)
      description: |
        OAuth 완료 후 채널 정보 저장
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: 대시보드로 리디렉트
        '400':
          description: OAuth 실패

  /channels:
    get:
      tags: [Channels]
      summary: 연결된 채널 목록 조회
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 채널 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'

  /channels/{channel_id}:
    delete:
      tags: [Channels]
      summary: 채널 연결 해제
      security:
        - BearerAuth: []
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 연결 해제 성공

  # Billing Endpoints
  /billing/checkout:
    post:
      tags: [Billing]
      summary: 결제 세션 생성 (FR-009, FR-017)
      description: |
        Stripe Checkout 세션 생성
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [plan]
              properties:
                plan:
                  type: string
                  enum: [pro, agency]
      responses:
        '200':
          description: 결제 세션 URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  checkout_url:
                    type: string
                    format: uri

  /billing/portal:
    post:
      tags: [Billing]
      summary: Customer Portal 링크 생성
      description: |
        Stripe Customer Portal (플랜 변경, 해지)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Portal URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  portal_url:
                    type: string
                    format: uri

  /billing/subscription:
    get:
      tags: [Billing]
      summary: 구독 정보 조회
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 구독 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /billing/webhook:
    post:
      tags: [Billing]
      summary: Stripe Webhook (FR-017)
      description: |
        Stripe 이벤트 수신 (구독 생성, 결제 성공/실패 등)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Webhook 처리 성공

  # Metrics Endpoints
  /metrics/dashboard:
    get:
      tags: [Metrics]
      summary: 대시보드 통계 (FR-015)
      description: |
        최근 30일 사용 통계
      security:
        - BearerAuth: []
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 90d]
            default: 30d
      responses:
        '200':
          description: 사용 통계
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageStats'

  /metrics/usage:
    get:
      tags: [Metrics]
      summary: 월간 사용량 조회 (FR-033, FR-034)
      description: |
        현재 월 사용량 및 잔여량
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 사용량 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  usage_this_month:
                    type: integer
                  monthly_limit:
                    type: integer
                  usage_percent:
                    type: number
                  remaining:
                    type: integer
                  will_alert_at_80_percent:
                    type: boolean

  # Account Endpoints
  /account:
    delete:
      tags: [Auth]
      summary: 계정 삭제 요청 (FR-025)
      description: |
        30일 이내 모든 개인 데이터 삭제
      security:
        - BearerAuth: []
      responses:
        '202':
          description: 삭제 요청 접수
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "계정 삭제 요청이 접수되었습니다. 30일 이내에 모든 데이터가 삭제됩니다."
                  deletion_date:
                    type: string
                    format: date-time
